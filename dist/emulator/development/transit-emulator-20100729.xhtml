<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Transit Widget Emulator 1.2.2 build 20100729</title>
  </head>

  <body>

    <h2>Transit Widget Emulator 1.2.2 build 20100729</h2>
    <h3>July 29, 2010</h3>

    <p>We've included some major updates included in this release. It's important information, read on for the details.</p>

    <h3>Fixes</h3>

    <p>Previously, static data was not being reset properly when a widget was reloaded or device profile changed. For example, the value for phoneScreenHeightDefault would be 800 but when a device profile for a smaller screen device, the API was still reporting a value of 800. This has been fixed anywhere in the API where there are accessible properties.</p>

    <p>XMLHttpRequest now functions correctly and responseXML properly parses the response and returns a DOM object. Keep in mind the emulator wraps the native XMLHttpRequest object, please let us know if you find anything missing in the wrapper.</p>

    <h3>New Features</h3>

    <p>Added a link called "Callback Source" which will pop up a panel showing the source code of the event picked via the radio buttons for event contexts.</p>

    <p>Added a landscape mode toggle for the display section of the general tab in the emulator window. Checking the landscape mode box will swap height and width while maintaining full screen mode, if checked. An onScreenChangeDimensions even will be triggered when landscape mode is toggled. Also changed is the behavior of the widget in floating mode. If a widget's height or width is larger than the screen size, the larger dimension will be shrunk to fix on the screen. For example, if a widget has a height of 500 pixels, but the device is only 400 pixels high, the widget will be resized to 400 pixels high.</p>

    <p>Implemented widget config.xml ingestion based on JIL specs. Transit will now be able to automatically detect and properly emulate widgets using either the JIL 1.0 or 1.2 packaging spec. New ingestion process also includes per the spec validation and proper handling of more config.xml elements. Feature tag enforcement and signature file detection is not yet implemented.</p>

    <p>Added support for both JIL API 1.1 revision 4 and 1.2.2. You can choose which API a device supports by changing the value in the Manage Profiles window. By default, all devices will use the 1.2.2 spec, but can be changed to 1.1r4 at any time. If a widget calls a 1.2.2 API using a device profile with 1.1r4 API support, the normal JavaScript? errors will be generated. This update also reflects the differences in the security matrix between the APIs.</p>

    <p>Introduced the API Extensions framework. These are 3rd party APIs that fall outside of the JIL specifications such as Opera, BONDI, etc. You can choose which extensions a device profile will support and any widget running with that profile will have access to those APIs. The first (and only at the moment) extension is for supporting the additional APIs in the Samsung M1/H1 runtime. More details can be found on the API Extensions page. More extensions to come, keep an eye on that page for details.</p>

    <h3>Under the Hood</h3>

    <p>To ease the process up future upgrades to the SQLite profile database, we've added an upgrade service that will recursively upgrade a database as many patch levels as required to bring it up to the current version. This check is done automatically every time the emulator starts. If any problems are encountered, it will rollback ensuring no data is lost during a failed upgrade.</p>

  </body>

</html>